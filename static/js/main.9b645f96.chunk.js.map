{"version":3,"sources":["components/Navbar.js","components/Header.js","utils.js","components/PrivateRoute.js","components/PublicRoute.js","components/Login.js","containers/Home.js","containers/List.js","assets/20200715_112939.jpg","logo.svg","containers/Profile.js","containers/Swipe.js","containers/Show.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","classes","makeStyles","stickToBottom","width","position","bottom","useStyles","sessionStorage","jwt","BottomNavigation","value","onChange","event","newValue","setValue","showLabels","className","BottomNavigationAction","component","Link","to","label","icon","theme","root","flexGrow","minHeight","top","menuButton","marginRight","spacing","title","textAlign","bar","toolbar","Header","AppBar","Toolbar","Typography","edge","variant","page","isLogin","PrivateRoute","Component","rest","render","PublicRoute","restricted","Login","type","onClick","window","location","href","Home","useLocation","history","useHistory","useEffect","queryParams","URLSearchParams","search","has","get","setItem","setLoggedIn","delete","replace","toString","loggedIn","height","maxWidth","backgroundColor","palette","background","paper","list","List","places","renderRow","index","style","ListItem","button","divider","pathname","yelp_id","ListItemText","primary","name","ListItemSecondaryAction","IconButton","aria-label","e","preventDefault","console","log","currentTarget","handleFavorite","handleRemove","itemSize","itemCount","length","overscanCount","Profile","src","John","alt","id","logo","db","Array","alreadyRemoved","charactersState","Swipe","characters","setCharacters","childRefs","useMemo","fill","map","i","React","createRef","swipe","dir","cardsLeft","filter","person","includes","toBeRemoved","indexOf","push","current","config","method","headers","Authorization","body","JSON","stringify","term","offset","query","refresh","fetch","BASE_URL","then","res","json","setQuery","character","ref","onSwipe","direction","restaurant","setPlaces","swiped","onCardLeftScreen","backgroundImage","photos","left","color","fontWeight","borderRadius","padding","marginTop","paddingTop","address1","city","state","postal_code","overflow","marginLeft","media","expand","transform","transition","transitions","create","duration","shortest","expandOpen","header","overlay","caption","link","customButton","marginBottom","content","stars","Show","useParams","useState","expanded","setExpanded","setRestaurant","placeIndex","findIndex","place","data","business","reviews","Card","CardMedia","image","Box","borderColor","CardHeader","phone","display_phone","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","mb","Rating","rating","readOnly","paragraph","text","App","isBusy","setBusy","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b645f96.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonIcon from '@material-ui/icons/Person';\n\nfunction Navbar(props) {\n  const useStyles = makeStyles({\n    stickToBottom: {\n      width: '100%',\n      position: 'fixed',\n      bottom: 0,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <>    \n    { sessionStorage.jwt ? <BottomNavigation\n      value={props.value}\n      onChange={(event, newValue) => {\n        props.setValue(newValue);\n      }}\n      showLabels\n      className={classes.stickToBottom}\n      \n    >\n      <BottomNavigationAction component={Link} to=\"/swipe\" label=\"Swipe\" value=\"MealSwipe\"icon={<RestaurantIcon />} />\n      <BottomNavigationAction component={Link} to=\"/list\" label=\"Places\" value=\"Places\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction component={Link} to=\"/profile\" label=\"Profile\" value=\"Profile\" icon={<PersonIcon />} />\n    </BottomNavigation>\n     : null }\n    </>\n  );\n}\n\nexport default Navbar","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '44px',\n    width: '100%',\n    position: 'sticky',\n    top: 0,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\"\n  },\n  bar: {\n    minHeight: '44px',\n  },\n  toolbar: {\n    minHeight: '44px',\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n\n  return (\n    <> \n      <div className={classes.root}>\n        <AppBar className={classes.bar} position=\"static\">\n          <Toolbar className={classes.toolbar}>\n            {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <FastfoodIcon />\n            </IconButton> */}\n            <Typography edge=\"start\" variant=\"h6\" className={classes.title}>\n            <FastfoodIcon /> {props.page}\n            </Typography>\n            {/* <Button color=\"inherit\">Login</Button> */}\n          </Toolbar>\n        </AppBar>\n      </div>  \n    </>\n  \n  );\n}","export const isLogin = () => {\n    return (\n    sessionStorage.jwt ? true : false\n    )\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils.js';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} {...rest}/>\n            : <Redirect to=\"/\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            isLogin() && restricted ?\n                <Redirect to=\"/swipe\" />\n            : <Component {...props} {...rest}/>\n        )} />\n    );\n};\n\nexport default PublicRoute;","import GoogleButton from 'react-google-button'\nimport React from 'react';\n\nexport default function Login() {\nreturn (\n\n      <header className=\"App-header\">\n        <p>\n          Login with google\n        </p>\n            <GoogleButton\n                type=\"light\"\n                onClick={() => { window.location.href='http://localhost:3000/authenticate-google' }}\n            />\n      </header>\n\n  );\n}","import React, { useEffect } from 'react';\n\nimport './home.css'\nimport Login from '../components/Login'\n\nimport { useLocation, useHistory, Redirect } from 'react-router-dom';\n\nconst Home = (props) => {\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search)\n\n    if (queryParams.has('token')) {\n      const jwt = queryParams.get('token');\n      sessionStorage.setItem(\"jwt\", jwt)\n      props.setLoggedIn(true)\n      queryParams.delete('token')\n      history.replace({\n        search: queryParams.toString(),\n      })\n    }\n  }, [history, props, location.search])\n\n    return(   \n      <div className=\"Home\">\n        {props.loggedIn ? <Redirect to=\"swipe\" /> : <Login />}\n      </div>\n    )\n  }\n  \n  export default Home","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { Link } from 'react-router-dom';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 'calc(100% - 56px - 44px)',\n    maxWidth: 400,\n    backgroundColor: theme.palette.background.paper,\n  },\n  list: {\n    height: 'calc(100% - 56px - 44px)',\n   \n  }\n}));\n\nexport default function List(props) {\n  const classes = useStyles();\n  const places= props.places\n  \n\n  function renderRow(props) {\n    const { index, style } = props;\n\n    const handleFavorite = (e, index) => {\n        e.preventDefault()\n        console.log(e.currentTarget)\n        console.log(index)\n    }\n\n    const handleRemove = (e, index) => {\n        e.preventDefault()\n        console.log('item:' + index)\n\n    }\n\n    return (\n      <ListItem button divider component={Link} \n            to={{ \n                pathname: `/restaurants/${places[index].yelp_id}`, \n                }} \n            style={style} key={index} >\n        <ListItemText primary={`${places[index].name}`} />\n        <div>\n        <ListItemSecondaryAction >\n                    <IconButton  edge=\"end\" aria-label=\"favorite\" onClick={(e) => handleFavorite(e, index)}>\n                      <FavoriteIcon />\n                    </IconButton>\n                    <IconButton  edge=\"end\" aria-label=\"delete\" onClick={(e) => handleRemove(e, index)}>\n                      <ClearIcon />\n                    </IconButton>\n        </ListItemSecondaryAction>\n        </div>\n      </ListItem>\n      \n    );\n  }\n  \n  renderRow.propTypes = {\n    index: PropTypes.number.isRequired,\n    style: PropTypes.object.isRequired,\n  };\n\n  return (\n    <div className={classes.root}>\n        <AutoSizer>\n            {({ height, width }) => (\n                <FixedSizeList className={classes.list} height={height} width={width} itemSize={46} itemCount={places.length} overscanCount={10}>\n                    {renderRow}\n                </FixedSizeList>\n            )}\n        </AutoSizer>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/20200715_112939.5b54978b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import John from '../assets/20200715_112939.jpg'\nimport logo from '../logo.svg'\nimport './profile.css'\n\n\nconst Profile = () => {\n    return(\n    <div className= \"Team\">\n        <div className=\"Bio\">\n            <h1><strong>John Ratana</strong></h1>\n            <img src={John} alt=\"That's ME!\" height=\"200px\"/>\n            <div>Full-Stack Software Engineer</div>\n            <p>Ruby, Rails, Javascript, React</p>\n            <p id=\"bio\">John keeps himself busy with rock climbing, coding, cooking, and raising two children (the 4C's).  Based out of Philadelphia, he is always\n                looking for new opportunities to learn, grow, and work.  You can find him <a href=\"https://www.linkedin.com/in/john-ratana-7aa24063/\">here (linkedIn)</a>.\n                Check out his work <a href=\"https://www.linkedin.com/in/john-ratana-7aa24063/\">here (Github)</a>\n            </p>\n        </div>\n            <h1>Techs</h1>\n            <div className= \"Techs\">\n                <div className= \"Techbox\">\n                    <img src={logo} alt=\"That's ME!\" height=\"200px\" width= \"200px\"/>\n                    <p>React</p>\n                </div>\n                <div className= \"Techbox\">\n                    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Ruby_On_Rails_Logo.svg/1200px-Ruby_On_Rails_Logo.svg.png' alt=\"That's ME!\" height=\"200px\" width= \"200px\"/>\n                    <p>Ruby On Rails</p>\n                </div>    \n            </div>\n\n    \n        <div className=\"Shoutout\">\n            <h2>Shoutout to <a href=\"https://mintbean.io/\">Mintbean.io</a> for organizing Learn-A-Thons to inspire new developers!</h2>\n        </div>\n    </div>\n    )\n}\n\nexport default Profile","import React, { useMemo, useEffect } from 'react'\nimport TinderCard from 'react-tinder-card'\nimport { BASE_URL } from '../App'\n\nimport './swipe.css'\n\nlet db= Array(10)\nconst alreadyRemoved = []\nlet charactersState = db\n\n // This fixes issues with updating characters state forcing it to use the current state and not the state that was active when the card was created.\n\nfunction Swipe (props) {\nlet characters= props.characters\nlet setCharacters= props.setCharacters \n\n  const childRefs = useMemo(() => Array(db.length).fill(0).map(i => React.createRef()), [])\n\n  const swiped = (direction, restaurant) => {\n    alreadyRemoved.push(restaurant.name)\n    \n    if (direction === 'right') {\n        let config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${sessionStorage.jwt}`\n            },\n            body: JSON.stringify({restaurant: restaurant})\n        }\n\n        fetch(BASE_URL+\"/swiperight\", config)\n        .then(res => res.json())\n        .then(res => {\n        props.setPlaces(res)\n        })\n    }\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n    charactersState = charactersState.filter(character => character.name !== name)\n    setCharacters(charactersState)\n  }\n\n  const swipe = (dir) => {\n    const cardsLeft = characters.filter(person => !alreadyRemoved.includes(person.name))\n    if (cardsLeft.length) {\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n      const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n      alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n      childRefs[index].current.swipe(dir) // Swipe the card!\n    }\n  }\n\n    useEffect(\n        () => {\n        if (characters.length === 0){\n\n          let config = {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              Authorization: `Bearer ${sessionStorage.jwt}`\n          },\n          body: JSON.stringify({term: \"restaurant\", location: \"philly\", offset: props.query.refresh*10+1})\n      }\n    \n      fetch(BASE_URL+\"/swipe\", config)\n          .then(res => res.json())\n          .then(res => {\n            setCharacters(res)\n            db = res\n            charactersState = db\n            props.setQuery({refresh: props.query.refresh+1})\n            \n          })\n        }\n        }\n        , [props.query, characters])\n\n  return (\n\n    <div className='swipeContainer'>\n      <div className='cardContainer'>\n        {characters.map((character, index) =>\n          <TinderCard ref={childRefs[index]} className='swipe' key={character.name} \n                        onSwipe={(dir) => swiped(dir, character)} \n                        onCardLeftScreen={() => outOfFrame(character.name)} \n                         >\n            <div style={{ backgroundImage: `url(${character.photos[0]})` }} className='card'>\n                <div style={{backgroundColor: 'rgba(52, 52, 52, 0.4)', position: 'absolute', left: 0,\n                        bottom: 0, textAlign: 'left', color: 'white', fontWeight: 'bold', borderRadius: '25px',\n                        maxWidth: 400, width: '66%', padding: '10px'}} className='caption'>\n                    <h2 style={{marginTop: '0', paddingTop: '0'}}>{character.name}</h2>\n                    <div>{character.location.address1}</div>\n                    <div>{character.location.city}, {character.location.state} {character.location.postal_code}</div>\n                </div>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n      <div className='buttons'>\n        <button onClick={() => swipe('left')}>Swipe left!</button>\n        <button onClick={() => swipe('right')}>Swipe right!</button>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Swipe","import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Link\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\nconst BASE_URL = \"http://localhost:3000/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    height: 'calc(100% - 56px - 44px - 4px)',\n    overflow: 'scroll',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  media: {\n    height: 0,\n    paddingTop: 'calc(100vh - 56px - 44px - 74px)', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    color: 'white',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    backgroundColor: 'rgba(52, 52, 52, 0.4)',\n    '&:hover': {\n        backgroundColor: 'rgba(52, 52, 52, 0.4)'}\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n    backgroundColor: 'rgba(52, 52, 52, 0.4)',\n    '&:hover': {\n        backgroundColor: 'rgba(52, 52, 52, 0.4)'}\n  },\n  header:{\n    padding: '5px'\n    \n  },\n  overlay: {\n    position: 'absolute',\n    bottom: '56px',\n    width: '100%',\n    maxWidth: 400,\n    color: 'white',\n },\n caption: {\n    borderRadius: '25px',\n    fontWeight: 'bolder',\n    width: '50%',\n    maxWidth: 400,\n    backgroundColor: 'rgba(52, 52, 52, 0.4)',\n },\n link: {\n    color: 'white',\n    fontWeight: 'bolder',\n },\n customButton: {\n     backgroundColor: 'rgba(52, 52, 52, 0.4)',\n     marginTop: '5px',\n     marginBottom: '5px',\n     marginLeft: '10px',\n     marginRight: '10px',\n     color: 'white',\n     '&:hover': {\n        backgroundColor: 'rgba(52, 52, 52, 0.4)'}\n },\n content:{\n     marginBottom: '10px'\n },\nstars: {\n    position: 'static'\n}\n}));\n\n\nfunction Show(props) {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false);\n    const [restaurant, setRestaurant]= useState(null)\n    const placeIndex = props.places.findIndex(place => place.yelp_id === id)\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n\n    const handleFavorite = () => {\n        console.log(\"favortied\")\n      };\n\n    const handleRemove = () => {\n        console.log(\"removed\")\n    };\n\n    const handleArrowBack = () => {\n        console.log(\"removed\")\n    };\n\n    useEffect(()=> {\n            let config = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Authorization': `Bearer ${sessionStorage.jwt}`\n                },\n            }\n\n            fetch(BASE_URL+\"restaurants/\"+id, config)\n            .then(res => res.json())\n            .then(res => {\n            setRestaurant(res.data.business)\n            })\n    }, [id])\n\n    if (restaurant) {\n        console.log(restaurant.reviews)\n        return (\n            <Card className={classes.root}>\n              <CardMedia\n                className={classes.media}\n                image= {restaurant.photos[0]}\n                title=\"restaurant name\"\n              />\n                <div className={classes.overlay}>\n                    {!expanded ? \n                    <Box className={classes.caption} component=\"div\" borderColor=\"transparent\">\n                        <Typography component=\"span\" >\n                        <CardHeader\n                            title={restaurant.name}\n                            className={classes.header}\n                        />\n                            <div>{restaurant.location.address1}</div>\n                            <div>{restaurant.location.city}, {restaurant.location.state} {restaurant.location.postal_code}</div>\n                            <a href={'tel:+'+ restaurant.phone} className={classes.link}>{restaurant.display_phone}</a>\n                        </Typography>\n                    </Box>\n                    : null }\n                    <CardActions disableSpacing>\n                        { !expanded ? \n                        <>\n                        <IconButton className={classes.customButton} aria-label=\"add to favorites\" onClick={handleFavorite}>\n                            <FavoriteIcon />\n                        </IconButton>\n                        <IconButton className={classes.customButton} aria-label=\"share\" onClick={handleRemove}>\n                            <ClearIcon />\n                        </IconButton>\n                        <IconButton className={classes.customButton} aria-label=\"share\" onClick={handleArrowBack}\n                            component={Link} \n                            to={{ \n                            pathname: `/restaurants/${props.places[(placeIndex -1) % props.places.length].yelp_id}`, \n                            }} \n                            >\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <IconButton className={classes.customButton} aria-label=\"share\" \n                        component={Link} \n                        to={{ \n                            pathname: `/restaurants/${props.places[(placeIndex +1) % props.places.length].yelp_id}`, \n                            }} \n                        >\n                            <ArrowForwardIcon />\n                        </IconButton>\n                        </>\n                        : null }\n                        <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                        >\n                        <ExpandMoreIcon />\n                        </IconButton>\n                    </CardActions>\n                </div>\n              <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent className={classes.content}>\n                    <CardHeader\n                        title={restaurant.name}\n                        className={classes.header}\n                    />\n                    <Box component=\"div\" mb={3} borderColor=\"transparent\">\n                        <Typography component=\"span\">\n                            <div>{restaurant.location.address1}</div>\n                            <div>{restaurant.location.city}, {restaurant.location.state} {restaurant.location.postal_code}</div>\n                            <a href={'tel:+'+ restaurant.phone}>{restaurant.display_phone}</a>\n                        </Typography>\n                    </Box>\n                    <Box component=\"div\" mb={3} borderColor=\"transparent\">\n                        <Rating className={classes.stars} name=\"read-only\" value={restaurant.rating} readOnly />\n                    </Box>\n                  <Typography paragraph>\n                    {restaurant.reviews[0].text}\n                  </Typography>\n                </CardContent>\n              </Collapse>\n            </Card>\n          );\n        }\n          else {return null}\n  }\n\n  export default Show","import React, { useState, useEffect } from 'react';\nimport './App.css';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HashRouter, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar'\nimport Header from './components/Header'\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport Home from './containers/Home';\nimport List from './containers/List';\nimport Profile from './containers/Profile';\nimport Swipe from './containers/Swipe';\nimport Show from './containers/Show'\n\n\n\nexport const BASE_URL = \"http://localhost:3000/\";\n\nfunction App() {\n  const [isBusy, setBusy] = useState(true)\n  const [value, setValue] = useState(\"MealSwipe\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [places, setPlaces] = useState([])\n  // const [location, setLocation] = useState({lat: null, lng: null, location: \"\"})\n  const [query, setQuery] = useState({refresh:0})\n  const [characters, setCharacters] = useState([])\n\n  useEffect(()=> {\n    let config = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${sessionStorage.jwt}`\n        },\n    }\n\n    fetch(BASE_URL+\"/restaurants\", config)\n    .then(res => res.json())\n    .then(res => {\n    setPlaces(res)\n    })\n  }, [])\n\n  const renderLoad = () => {\n    if (isBusy) {\n      setBusy(false)\n      return <div>Loading</div>;\n    } else {\n\n      return (\n        <HashRouter basename='/'>\n          <Header page={value} setValue={setValue} />\n          <Navbar value={value} setValue={setValue} />\n          <Switch>\n            <PublicRoute path='/' exact restricted={true} component={Home} setLoggedIn={setLoggedIn} loggedIn={loggedIn}/>\n            <PrivateRoute path='/swipe' exact component={Swipe} \n                setPlaces={setPlaces} \n                query={query} \n                setQuery={setQuery} \n                characters={characters} \n                setCharacters={setCharacters}/>\n            <PrivateRoute path='/list' exact component={List} places={places}/>\n            <PrivateRoute path='/profile' exact component={Profile} /> \n            <PrivateRoute path='/restaurants/:id' component={Show} places={places} />\n          </Switch>\n        </HashRouter>\n      )\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        {renderLoad()}  \n      </div>\n    );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}